State 19 conflicts: 1 shift/reduce


Grammar

    0 $accept: line_list $end

    1 line_list: line
    2          | line_list line

    3 line: logic3 CR
    4     | logic3 $end

    5 logic3: logic2
    6       | logic3 OR logic2

    7 logic2: logic1
    8       | logic2 AND logic1

    9 logic1: logic0
   10       | NOT logic0

   11 logic0: expression
   12       | LP logic3 RP

   13 expression: term
   14           | expression ADD term
   15           | expression SUB term

   16 term: single
   17     | term MUL single
   18     | term DIV single

   19 single: NUM
   20       | SUB single
   21       | ADD single
   22       | LP expression RP


Terminals, with rules where they appear

    $end (0) 0 4
    error (256)
    ADD (258) 14 21
    SUB (259) 15 20
    MUL (260) 17
    DIV (261) 18
    CR (262) 3
    LP (263) 12 22
    RP (264) 12 22
    AND (265) 8
    OR (266) 6
    NOT (267) 10
    NUM <d_num> (268) 19


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    line_list (15)
        on left: 1 2
        on right: 0 2
    line (16)
        on left: 3 4
        on right: 1 2
    logic3 <d_num> (17)
        on left: 5 6
        on right: 3 4 6 12
    logic2 <d_num> (18)
        on left: 7 8
        on right: 5 6 8
    logic1 <d_num> (19)
        on left: 9 10
        on right: 7 8
    logic0 <d_num> (20)
        on left: 11 12
        on right: 9 10
    expression <d_num> (21)
        on left: 13 14 15
        on right: 11 14 15 22
    term <d_num> (22)
        on left: 16 17 18
        on right: 13 14 15 17 18
    single <d_num> (23)
        on left: 19 20 21 22
        on right: 16 17 18 20 21


State 0

    0 $accept: • line_list $end

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    NOT  shift, and go to state 4
    NUM  shift, and go to state 5

    line_list   go to state 6
    line        go to state 7
    logic3      go to state 8
    logic2      go to state 9
    logic1      go to state 10
    logic0      go to state 11
    expression  go to state 12
    term        go to state 13
    single      go to state 14


State 1

   21 single: ADD • single

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    single  go to state 16


State 2

   20 single: SUB • single

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    single  go to state 17


State 3

   12 logic0: LP • logic3 RP
   22 single: LP • expression RP

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    NOT  shift, and go to state 4
    NUM  shift, and go to state 5

    logic3      go to state 18
    logic2      go to state 9
    logic1      go to state 10
    logic0      go to state 11
    expression  go to state 19
    term        go to state 13
    single      go to state 14


State 4

   10 logic1: NOT • logic0

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    NUM  shift, and go to state 5

    logic0      go to state 20
    expression  go to state 12
    term        go to state 13
    single      go to state 14


State 5

   19 single: NUM •

    $default  reduce using rule 19 (single)


State 6

    0 $accept: line_list • $end
    2 line_list: line_list • line

    $end  shift, and go to state 21
    ADD   shift, and go to state 1
    SUB   shift, and go to state 2
    LP    shift, and go to state 3
    NOT   shift, and go to state 4
    NUM   shift, and go to state 5

    line        go to state 22
    logic3      go to state 8
    logic2      go to state 9
    logic1      go to state 10
    logic0      go to state 11
    expression  go to state 12
    term        go to state 13
    single      go to state 14


State 7

    1 line_list: line •

    $default  reduce using rule 1 (line_list)


State 8

    3 line: logic3 • CR
    4     | logic3 • $end
    6 logic3: logic3 • OR logic2

    $end  shift, and go to state 23
    CR    shift, and go to state 24
    OR    shift, and go to state 25


State 9

    5 logic3: logic2 •
    8 logic2: logic2 • AND logic1

    AND  shift, and go to state 26

    $default  reduce using rule 5 (logic3)


State 10

    7 logic2: logic1 •

    $default  reduce using rule 7 (logic2)


State 11

    9 logic1: logic0 •

    $default  reduce using rule 9 (logic1)


State 12

   11 logic0: expression •
   14 expression: expression • ADD term
   15           | expression • SUB term

    ADD  shift, and go to state 27
    SUB  shift, and go to state 28

    $default  reduce using rule 11 (logic0)


State 13

   13 expression: term •
   17 term: term • MUL single
   18     | term • DIV single

    MUL  shift, and go to state 29
    DIV  shift, and go to state 30

    $default  reduce using rule 13 (expression)


State 14

   16 term: single •

    $default  reduce using rule 16 (term)


State 15

   22 single: LP • expression RP

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    expression  go to state 31
    term        go to state 13
    single      go to state 14


State 16

   21 single: ADD single •

    $default  reduce using rule 21 (single)


State 17

   20 single: SUB single •

    $default  reduce using rule 20 (single)


State 18

    6 logic3: logic3 • OR logic2
   12 logic0: LP logic3 • RP

    RP  shift, and go to state 32
    OR  shift, and go to state 25


State 19

   11 logic0: expression •
   14 expression: expression • ADD term
   15           | expression • SUB term
   22 single: LP expression • RP

    ADD  shift, and go to state 27
    SUB  shift, and go to state 28
    RP   shift, and go to state 33

    RP        [reduce using rule 11 (logic0)]
    $default  reduce using rule 11 (logic0)


State 20

   10 logic1: NOT logic0 •

    $default  reduce using rule 10 (logic1)


State 21

    0 $accept: line_list $end •

    $default  accept


State 22

    2 line_list: line_list line •

    $default  reduce using rule 2 (line_list)


State 23

    4 line: logic3 $end •

    $default  reduce using rule 4 (line)


State 24

    3 line: logic3 CR •

    $default  reduce using rule 3 (line)


State 25

    6 logic3: logic3 OR • logic2

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    NOT  shift, and go to state 4
    NUM  shift, and go to state 5

    logic2      go to state 34
    logic1      go to state 10
    logic0      go to state 11
    expression  go to state 12
    term        go to state 13
    single      go to state 14


State 26

    8 logic2: logic2 AND • logic1

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    NOT  shift, and go to state 4
    NUM  shift, and go to state 5

    logic1      go to state 35
    logic0      go to state 11
    expression  go to state 12
    term        go to state 13
    single      go to state 14


State 27

   14 expression: expression ADD • term

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    term    go to state 36
    single  go to state 14


State 28

   15 expression: expression SUB • term

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    term    go to state 37
    single  go to state 14


State 29

   17 term: term MUL • single

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    single  go to state 38


State 30

   18 term: term DIV • single

    ADD  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 15
    NUM  shift, and go to state 5

    single  go to state 39


State 31

   14 expression: expression • ADD term
   15           | expression • SUB term
   22 single: LP expression • RP

    ADD  shift, and go to state 27
    SUB  shift, and go to state 28
    RP   shift, and go to state 33


State 32

   12 logic0: LP logic3 RP •

    $default  reduce using rule 12 (logic0)


State 33

   22 single: LP expression RP •

    $default  reduce using rule 22 (single)


State 34

    6 logic3: logic3 OR logic2 •
    8 logic2: logic2 • AND logic1

    AND  shift, and go to state 26

    $default  reduce using rule 6 (logic3)


State 35

    8 logic2: logic2 AND logic1 •

    $default  reduce using rule 8 (logic2)


State 36

   14 expression: expression ADD term •
   17 term: term • MUL single
   18     | term • DIV single

    MUL  shift, and go to state 29
    DIV  shift, and go to state 30

    $default  reduce using rule 14 (expression)


State 37

   15 expression: expression SUB term •
   17 term: term • MUL single
   18     | term • DIV single

    MUL  shift, and go to state 29
    DIV  shift, and go to state 30

    $default  reduce using rule 15 (expression)


State 38

   17 term: term MUL single •

    $default  reduce using rule 17 (term)


State 39

   18 term: term DIV single •

    $default  reduce using rule 18 (term)
